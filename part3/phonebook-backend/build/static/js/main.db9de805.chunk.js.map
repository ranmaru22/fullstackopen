{"version":3,"sources":["filter.js","personform.js","persons.js","notification.js","services/personService.js","app.js","index.js"],"names":["Filter","value","handlerFunction","onChange","PersonForm","formFields","onSubmit","map","field","key","label","type","Persons","persons","filterVal","deleteFunction","filter","val","name","toUpperCase","includes","number","onClick","Notification","message","isError","className","baseUri","getAll","a","axios","get","res","data","createEntry","dataObj","post","deleteEntry","id","delete","updateEntry","patchData","patch","App","useState","Array","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterVal","notification","setNotification","errorMsg","setErrorMsg","useEffect","fetchData","personService","error","showError","showNotification","timeout","setTimeout","isAlreadyInPhonebook","find","p","addOrUpdate","e","preventDefault","found","newPerson","addedPerson","concat","response","window","confirm","updatedPerson","deleteFromPhonebook","entry","console","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db9de805.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ value, handlerFunction }) => (\n    <div>\n        <label>Filter: </label>\n        <input value={value} onChange={handlerFunction} />\n    </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({ formFields, handlerFunction }) => (\n    <form onSubmit={handlerFunction}>\n        {formFields.map(field => (\n            <div key={field.label}>\n                <label>{field.label}</label>\n                <input value={field.value} onChange={field.handlerFunction}/>\n            </div>\n        ))}\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n);\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, filterVal, deleteFunction }) => (\n    <ul>\n        {\n            persons\n                .filter(val => val.name.toUpperCase().includes(filterVal.toUpperCase()))\n                .map(val => (\n                    <li key={val.name}>\n                        {val.name} : {val.number}\n                        <button onClick={() => deleteFunction(val)}>delete</button>\n                    </li>\n                ))\n        }\n    </ul>\n);\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message, isError=false }) => {\n    if (message === null) {\n        return null;\n    } else {\n        return isError\n            ? <div className=\"error\">{message}</div>\n            : <div className=\"notification\">{message}</div>;\n    }\n};\n\nexport default Notification;\n","import axios from \"axios\";\n\n// const baseUri = \"http://localhost:3888/persons\";\nconst baseUri = \"/api/persons\";\n\nconst getAll = async () => {\n    const res = await axios.get(baseUri);\n    return res.data;\n};\n\nconst createEntry = async dataObj => {\n    const res = await axios.post(baseUri, dataObj);\n    return res.data;\n};\n\nconst deleteEntry = async id => {\n    const res = await axios.delete(`${baseUri}/${id}`);\n    return res;\n};\n\nconst updateEntry = async (id, patchData) => {\n    const res = await axios.patch(`${baseUri}/${id}`, patchData);\n    return res.data;\n};\n\nexport default { getAll, createEntry, deleteEntry, updateEntry };\n","import React, { useState, useEffect } from \"react\";\n\nimport Filter from \"./filter\";\nimport PersonForm from \"./personform\";\nimport Persons from \"./persons\";\nimport Notification from \"./notification\";\n\nimport personService from \"./services/personService\";\n\nconst App = () => {\n    const [persons, setPersons] = useState(new Array(0));\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [filterVal, setFilterVal] = useState(\"\");\n    const [notification, setNotification] = useState(null);\n    const [errorMsg, setErrorMsg] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const persons = await personService.getAll();\n            setPersons(persons);\n        };\n        try {\n            fetchData();\n        } catch (error) {\n            showError(\"Error fetching data from the server.\", 5000);\n        }\n    }, []);\n\n    const showNotification = (message, timeout = 2500) => {\n        setNotification(message);\n        setTimeout(() => setNotification(null), timeout);\n    };\n\n    const showError = (message, timeout = 2500) => {\n        setErrorMsg(message);\n        setTimeout(() => setNotification(null), timeout);\n    };\n\n    const isAlreadyInPhonebook = name => persons.find(p => p.name === name);\n\n    const addOrUpdate = async e => {\n        e.preventDefault();\n        const found = isAlreadyInPhonebook(newName);\n        if (!found) {\n            try {\n                const newPerson = { name: newName, number: newNumber };\n                const addedPerson = await personService.createEntry(newPerson);\n                setPersons(persons.concat(addedPerson));\n                showNotification(`${addedPerson.name} added to phonebook.`);\n            } catch (error) {\n                showError(error.response.data.error || \"Error adding entry.\");\n            }\n        } else {\n            if (\n                window.confirm(\n                    `${found.name} is already in the phonebook. Update the number?`\n                )\n            ) {\n                try {\n                    const patchData = { number: newNumber };\n                    const updatedPerson = await personService.updateEntry(\n                        found.id,\n                        patchData\n                    );\n                    setPersons(\n                        persons.map(p =>\n                            p.name === updatedPerson.name ? updatedPerson : p\n                        )\n                    );\n                    showNotification(`Number for ${found.name} updated.`);\n                } catch (error) {\n                    showError(\n                        error.response.data.error || \"Error updating entry.\"\n                    );\n                }\n            }\n        }\n        setNewName(\"\");\n        setNewNumber(\"\");\n    };\n\n    const deleteFromPhonebook = async entry => {\n        if (\n            window.confirm(\n                `Do you really want to delete ${entry.name} from the phonebook?`\n            )\n        ) {\n            try {\n                await personService.deleteEntry(entry.id);\n                setPersons(persons.filter(p => p.id !== entry.id));\n                showNotification(`${entry.name} deleted from phonebook.`);\n            } catch (error) {\n                console.error(\"Error deleting entry.\");\n            }\n        }\n    };\n\n    const newNameHandler = e => setNewName(e.target.value);\n    const newNumberHandler = e => setNewNumber(e.target.value);\n    const setFilter = e => setFilterVal(e.target.value);\n\n    const formFields = [\n        { label: \"name\", value: newName, handlerFunction: newNameHandler },\n        { label: \"number\", value: newNumber, handlerFunction: newNumberHandler }\n    ];\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={notification} />\n            <Notification message={errorMsg} isError={true} />\n            <Filter value={filterVal} handlerFunction={setFilter} />\n            <h2>Add new</h2>\n            <PersonForm formFields={formFields} handlerFunction={addOrUpdate} />\n            <h2>Numbers</h2>\n            <Persons\n                persons={persons}\n                filterVal={filterVal}\n                deleteFunction={deleteFromPhonebook}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./app.js\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}